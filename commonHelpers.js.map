{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nconst inputEl = document.querySelector(\"input#datetime-picker\");\nconst buttonEl = document.querySelector(\"button[data-start]\");\nconst spanDays = document.querySelector(\"span[data-days]\");\nconst spanHours = document.querySelector(\"span[data-hours]\");\nconst spanMinutes = document.querySelector(\"span[data-minutes]\");\nconst spanSeconds = document.querySelector(\"span[data-seconds]\");\nlet intervalId;\nbuttonEl.disabled = true;\nlet hasError = false;\nlet selectedDate;\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates, dateStr, instance) {\n        clearInterval(intervalId);\n        selectedDate = selectedDates[0];\n        const currentDate = new Date();\n\n        if (selectedDate < currentDate) {\n            if (!hasError) {\n                iziToast.show({\n                    title: 'Hey',\n                    message: 'Ви ввели невірну дату'\n                });\n                hasError = true;\n            }\n            buttonEl.disabled = true;\n\n        } else {\n            hasError = false;\n            buttonEl.disabled = false;\n        }\n    },\n};\nflatpickr(inputEl, options)\nbuttonEl.addEventListener(\"click\", () => {\n    const currentDate = new Date();\n\n    if (selectedDate < currentDate) {\n        if (!hasError) {\n            iziToast.show({\n                title: 'Hey',\n                message: 'Ви ввели невірну дату'\n            });\n            hasError = true;\n        }\n        clearInterval(intervalId);\n        buttonEl.disabled = true;\n\n    } else {\n        hasError = false;\n        clearInterval(intervalId);\n        intervalId = setInterval(() => {\n            checkDates(selectedDate);\n        }, 1000);\n    }\n});\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\nfunction updateTimerDisplay(ms) {\n    if (ms === null || isNaN(ms)) {\n        spanDays.textContent = \"00\";\n        spanHours.textContent = \"00\";\n        spanMinutes.textContent = \"00\";\n        spanSeconds.textContent = \"00\";\n    } else {\n        const time = convertMs(ms);\n        spanDays.textContent = String(time.days).padStart(2, '0');\n        spanHours.textContent = String(time.hours).padStart(2, '0');\n        spanMinutes.textContent = String(time.minutes).padStart(2, '0');\n        spanSeconds.textContent = String(time.seconds).padStart(2, '0');\n    }\n}\nfunction checkDates(selectedDate) {\n\n    const currentDate = new Date();\n    if (selectedDate < currentDate) {\n        if (!hasError) {\n            iziToast.show({\n                title: 'Hey',\n                message: 'Ви ввели невірну дату'\n            });\n            hasError = true;\n        }\n        buttonEl.disabled = true;\n        updateTimerDisplay(null);\n        clearInterval(intervalId);\n        return;\n    } else {\n        hasError = false;\n        const difference = selectedDate - currentDate;\n        updateTimerDisplay(difference);\n    }\n}"],"names":["inputEl","buttonEl","spanDays","spanHours","spanMinutes","spanSeconds","intervalId","hasError","selectedDate","options","selectedDates","dateStr","instance","currentDate","iziToast","flatpickr","checkDates","convertMs","ms","days","hours","minutes","seconds","updateTimerDisplay","time","difference"],"mappings":"2GAIA,MAAMA,EAAU,SAAS,cAAc,uBAAuB,EACxDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAC/D,IAAIC,EACJL,EAAS,SAAW,GACpB,IAAIM,EAAW,GACXC,EACJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAeC,EAASC,EAAU,CACtC,cAAcN,CAAU,EACxBE,EAAeE,EAAc,GAC7B,MAAMG,EAAc,IAAI,KAEpBL,EAAeK,GACVN,IACDO,EAAS,KAAK,CACV,MAAO,MACP,QAAS,uBAC7B,CAAiB,EACDP,EAAW,IAEfN,EAAS,SAAW,KAGpBM,EAAW,GACXN,EAAS,SAAW,GAE3B,CACL,EACAc,EAAUf,EAASS,CAAO,EAC1BR,EAAS,iBAAiB,QAAS,IAAM,CACrC,MAAMY,EAAc,IAAI,KAEpBL,EAAeK,GACVN,IACDO,EAAS,KAAK,CACV,MAAO,MACP,QAAS,uBACzB,CAAa,EACDP,EAAW,IAEf,cAAcD,CAAU,EACxBL,EAAS,SAAW,KAGpBM,EAAW,GACX,cAAcD,CAAU,EACxBA,EAAa,YAAY,IAAM,CAC3BU,EAAWR,CAAY,CAC1B,EAAE,GAAI,EAEf,CAAC,EACD,SAASS,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CACA,SAASC,EAAmBL,EAAI,CAC5B,GAAIA,IAAO,MAAQ,MAAMA,CAAE,EACvBhB,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,SACvB,CACH,MAAMmB,EAAOP,EAAUC,CAAE,EACzBhB,EAAS,YAAc,OAAOsB,EAAK,IAAI,EAAE,SAAS,EAAG,GAAG,EACxDrB,EAAU,YAAc,OAAOqB,EAAK,KAAK,EAAE,SAAS,EAAG,GAAG,EAC1DpB,EAAY,YAAc,OAAOoB,EAAK,OAAO,EAAE,SAAS,EAAG,GAAG,EAC9DnB,EAAY,YAAc,OAAOmB,EAAK,OAAO,EAAE,SAAS,EAAG,GAAG,CACjE,CACL,CACA,SAASR,EAAWR,EAAc,CAE9B,MAAMK,EAAc,IAAI,KACxB,GAAIL,EAAeK,EAAa,CACvBN,IACDO,EAAS,KAAK,CACV,MAAO,MACP,QAAS,uBACzB,CAAa,EACDP,EAAW,IAEfN,EAAS,SAAW,GACpBsB,EAAmB,IAAI,EACvB,cAAcjB,CAAU,EACxB,MACR,KAAW,CACHC,EAAW,GACX,MAAMkB,EAAajB,EAAeK,EAClCU,EAAmBE,CAAU,CAChC,CACL"}